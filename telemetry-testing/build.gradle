plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.12'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'de.undercouch.download' version '4.1.1'
}

description = 'OpenTelemetry Example for Telemetry Testing'
ext.moduleName = "io.opentelemetry.examples.telemetry-testing"

bootRun {
    mainClass.set 'io.opentelemetry.example.javagent.Application'
}

bootJar {
    dependsOn("downloadAgent")
}

dependencies {
    implementation("io.opentelemetry:opentelemetry-api")
    implementation('io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:1.17.0-alpha')
    //spring modules
    implementation("org.springframework.boot:spring-boot-starter-web")
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    testImplementation("org.junit.platform:junit-platform-runner:1.9.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.7.0")
    testImplementation("org.mock-server:mockserver-netty:5.14.0:shaded")
    testImplementation("org.awaitility:awaitility:4.2.0")
    testImplementation("io.opentelemetry.proto:opentelemetry-proto:0.14.0-alpha")
    testImplementation("org.assertj:assertj-core:3.23.1")

}

test {
    useJUnitPlatform()
    def jvmAgent = "${projectDir}/build/otel/opentelemetry-javaagent.jar"
    jvmArgs "-javaagent:$jvmAgent", "-Dotel.exporter.otlp.protocol=http/protobuf", "-Dotel.metric.export.interval=1000"

}
// Download the OpenTelemetry java agent and put it in the build directory
task downloadAgent(type: Download) {
    src "https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v${otelVersion}/opentelemetry-javaagent.jar"
    dest project.buildDir.toString() + "/otel/opentelemetry-javaagent.jar"
    print(dest)
    overwrite true
}
